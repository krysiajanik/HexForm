{"version":3,"sources":["MyForm.module.scss","Validate.js","Condition.js","ValidatorsFn.js","Duration.js","Logo.js","MyForm.js","index.js"],"names":["module","exports","reqErr","validate","e","errors","name","preparation_time","match","type","no_of_slices","diameter","spiciness_scale","slices_of_bread","Condition","when","is","children","subscription","value","input","composeValidators","validators","reduce","error","validator","undefined","normalizeDuration","onlyNums","replace","slice","Logo","props","width","height","viewBox","fill","d","MemoLogo","React","MyForm","onSubmit","values","a","createDishObj","parseInt","parseFloat","newDish","JSON","stringify","postHeaders","Headers","append","fetch","method","headers","body","redirect","then","response","text","result","console","log","window","alert","catch","minValue","min","isNaN","maxValue","max","className","styles","wrapper","formHeader","handleSubmit","form","submitting","dishForm","fieldWrapper","fullWidth","required","component","TextField","label","for","fieldHelperTxt","placeholder","parse","id","select","MenuItem","Select","formControlProps","buttonWrapper","Button","variant","size","onClick","restart","disabled","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b8e3fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"MyForm_buttonWrapper__1Bt_a\",\"dishForm\":\"MyForm_dishForm__hFXqY\",\"fieldWrapper\":\"MyForm_fieldWrapper__MRkjt\",\"fieldHelperTxt\":\"MyForm_fieldHelperTxt__XNOqp\",\"formHeader\":\"MyForm_formHeader__2jCPh\",\"wrapper\":\"MyForm_wrapper__zleSf\"};","const reqErr = \"Required\"\r\n\r\nconst validate = (e) => {\r\n    const errors = {};\r\n\r\n    if (!e.name) {\r\n      errors.name = reqErr;\r\n    }\r\n    if (!e.preparation_time) {\r\n      errors.preparation_time = reqErr;\r\n    }\r\n\r\n    if (\r\n      e.preparation_time &&\r\n      !e.preparation_time.match(/[0-0][0-2]:[0-5][0-9]:[0-5][0-9]/g)\r\n    ) {\r\n      errors.preparation_time = \"Incorrect input - max duration 02:59:59\";\r\n    }\r\n\r\n    if (!e.type) {\r\n      errors.type = reqErr;\r\n    }\r\n    if (e.type === \"pizza\") {\r\n      if (!e.no_of_slices) {\r\n        errors.no_of_slices = reqErr;\r\n      }\r\n      if (!e.diameter) {\r\n        errors.diameter = reqErr;\r\n      }\r\n    }\r\n    if (e.diameter && !e.diameter.match(/[0-7][0-9].[0-9]|[0-8][0-0].[0-0]/g)) {\r\n      errors.diameter = \"Please input value in format 00.0!\";\r\n    }\r\n\r\n    if (e.type === \"soup\") {\r\n      if (!e.spiciness_scale) {\r\n        errors.spiciness_scale = reqErr;\r\n      }\r\n    }\r\n\r\n    if (e.type === \"soup\") {\r\n      if (!e.slices_of_bread) {\r\n        errors.slices_of_bread = reqErr;\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  export default validate;","import React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\n\r\nconst Condition = ({ when, is, children }) => {\r\n  return (\r\n    <Field name={when} subscription={{ value: true }}>\r\n      {({ input: { value } }) => (value === is ? children : null)}\r\n    </Field>\r\n  );\r\n};\r\n\r\nexport default Condition;\r\n","function composeValidators() {\r\n  return (...validators) =>\r\n    (value) =>\r\n      validators.reduce(\r\n        (error, validator) => error || validator(value),\r\n        undefined\r\n      );\r\n}\r\n\r\nexport default composeValidators;\r\n","function normalizeDuration (value) {\r\n    \r\n        if (!value) return value;\r\n        const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n        return `${onlyNums.slice(0, 2)}:${onlyNums.slice(2, 4)}:${onlyNums.slice(\r\n          4,\r\n          6\r\n        )\r\n        }`\r\n    }\r\n        \r\n        \r\nexport default normalizeDuration;","import * as React from \"react\";\n\nfunction Logo(props) {\n  return (\n    <svg width=\"62px\" height=\"62px\" viewBox=\"0 0 512 512\" fill=\"none\" {...props}>\n      <path fill=\"#fff\" d=\"M0 0h512v512H0z\" />\n      <path\n        d=\"M341.333 128v170.667h64v170.666H448V42.667c-58.88 0-106.667 47.786-106.667 85.333zm-106.666 64H192V42.667h-42.667V192h-42.666V42.667H64V192c0 47.147 38.187 85.333 85.333 85.333v192H192v-192c47.147 0 85.333-38.186 85.333-85.333V42.667h-42.666V192z\"\n        fill=\"#000\"\n      />\n    </svg>\n  );\n}\n\nconst MemoLogo = React.memo(Logo);\nexport default MemoLogo;\n","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Select } from \"final-form-material-ui\";\r\nimport { MenuItem, Button } from \"@material-ui/core\";\r\nimport validate from \"./Validate\";\r\nimport Condition from \"./Condition\";\r\nimport composeValidators from \"./ValidatorsFn\";\r\nimport normalizeDuration from \"./Duration\";\r\nimport Logo from \"./Logo.js\";\r\nimport styles from \"./MyForm.module.scss\";\r\n\r\nconst MyForm = () => {\r\n  const onSubmit = async (values) => {\r\n    const createDishObj = {\r\n      name: values.name,\r\n      preparation_time: values.preparation_time,\r\n      type: values.type,\r\n      no_of_slices: parseInt(values.no_of_slices),\r\n      diameter: parseFloat(values.diameter),\r\n      spiciness_scale: values.spiciness_scale,\r\n      slices_of_bread: parseInt(values.slices_of_bread),\r\n    };\r\n\r\n    const newDish = JSON.stringify(createDishObj, 0, 2);\r\n    const postHeaders = new Headers();\r\n    postHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    const postDishes = {\r\n      method: \"POST\",\r\n      headers: postHeaders,\r\n      body: newDish,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\"https://frosty-wood-6558.getsandbox.com:443/dishes\", postDishes)\r\n      .then((response) => response.text())\r\n      .then((result) => console.log(result))\r\n      .then(() => window.alert(\"Dish submitted\"))\r\n      .catch((error) => window.alert(\"error\", error));\r\n  };\r\n\r\n  const minValue = (min) => (value) =>\r\n    isNaN(value) || value >= min\r\n      ? undefined\r\n      : `Number can't be less than ${min}`;\r\n\r\n  const maxValue = (max) => (value) =>\r\n    isNaN(value) || value <= max\r\n      ? undefined\r\n      : `Number can't be more than ${max}`;\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Logo />\r\n      <h1 className={styles.formHeader}>Add a new dish</h1>\r\n      <Form onSubmit={onSubmit} validate={validate}>\r\n        {({ handleSubmit, values, form, submitting, ...props }) => (\r\n          <form onSubmit={handleSubmit} className={styles.dishForm}>\r\n            <div className={styles.fieldWrapper}>\r\n              <Field\r\n                fullWidth\r\n                required\r\n                name=\"name\"\r\n                component={TextField}\r\n                type=\"text\"\r\n                label=\"Dish name\"\r\n              />\r\n              <label for=\"name\" className={styles.fieldHelperTxt}>\r\n                Name your dish\r\n              </label>\r\n            </div>\r\n            <div className={styles.fieldWrapper}>\r\n              <Field\r\n                fullWidth\r\n                required\r\n                name=\"preparation_time\"\r\n                component={TextField}\r\n                type=\"text\"\r\n                label=\"Preparation time\"\r\n                placeholder=\"00:00:00\"\r\n                parse={normalizeDuration}\r\n              />\r\n              <label for=\"name\" className={styles.fieldHelperTxt}>\r\n                Preparation time can be maximum 02:59:59\r\n              </label>\r\n            </div>\r\n            <div className={styles.fieldWrapper}>\r\n              <Field\r\n                name=\"type\"\r\n                id=\"type\"\r\n                select\r\n                label=\"Select dish type\"\r\n                component={TextField}\r\n                type=\"time\"\r\n                fullWidth\r\n                required\r\n              >\r\n                <MenuItem value=\"pizza\">Pizza</MenuItem>\r\n                <MenuItem value=\"soup\">Soup</MenuItem>\r\n                <MenuItem value=\"sandwich\">Sandwich</MenuItem>\r\n              </Field>\r\n              <label for=\"name\" className={styles.fieldHelperTxt}>\r\n                Select dish type\r\n              </label>\r\n            </div>\r\n            <Condition when=\"type\" is=\"pizza\">\r\n              <div className={styles.fieldWrapper}>\r\n                <Field\r\n                  name=\"no_of_slices\"\r\n                  label=\"Number of slices\"\r\n                  component={TextField}\r\n                  type=\"number\"\r\n                  validate={composeValidators(minValue(1) && maxValue(12))}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <label for=\"name\" className={styles.fieldHelperTxt}>\r\n                  Maximum 12 slices\r\n                </label>\r\n              </div>\r\n              <div className={styles.fieldWrapper}>\r\n                <Field\r\n                  name=\"diameter\"\r\n                  label=\"Diameter\"\r\n                  component={TextField}\r\n                  type=\"number\"\r\n                  validate={composeValidators(minValue(10) && maxValue(80))}\r\n                  placeholder=\"00.0\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <label for=\"name\" className={styles.fieldHelperTxt}>\r\n                  Diameter should be between 10cm and 80cm\r\n                </label>\r\n              </div>\r\n            </Condition>\r\n            <Condition when=\"type\" is=\"soup\" type=\"number\">\r\n              <div className={styles.fieldWrapper}>\r\n                <Field\r\n                  name=\"spiciness_scale\"\r\n                  component={Select}\r\n                  formControlProps={{ fullWidth: true }}\r\n                  label=\"Spiciness scale\"\r\n                  fullWidth\r\n                  required\r\n                >\r\n                  <MenuItem value=\"1\">1</MenuItem>\r\n                  <MenuItem value=\"2\">2</MenuItem>\r\n                  <MenuItem value=\"3\">3</MenuItem>\r\n                  <MenuItem value=\"4\">4</MenuItem>\r\n                  <MenuItem value=\"5\">5</MenuItem>\r\n                  <MenuItem value=\"6\">6</MenuItem>\r\n                  <MenuItem value=\"7\">7</MenuItem>\r\n                  <MenuItem value=\"8\">8</MenuItem>\r\n                  <MenuItem value=\"9\">9</MenuItem>\r\n                  <MenuItem value=\"10\">10</MenuItem>\r\n                </Field>\r\n                <label for=\"name\" className={styles.fieldHelperTxt}>\r\n                  How spicy will the soup be?\r\n                </label>\r\n              </div>\r\n            </Condition>\r\n            <Condition when=\"type\" is=\"sandwich\">\r\n              <div className={styles.fieldWrapper}>\r\n                <Field\r\n                  name=\"slices_of_bread\"\r\n                  label=\"Number of slices of bread\"\r\n                  component={TextField}\r\n                  type=\"number\"\r\n                  validate={composeValidators(minValue(0) && maxValue(8))}\r\n                  fullWidth\r\n                  required\r\n                />\r\n                <label for=\"name\" className={styles.fieldHelperTxt}>\r\n                  Maximum 8 slices of bread\r\n                </label>\r\n              </div>\r\n            </Condition>\r\n            <span className={styles.buttonWrapper}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                type=\"button\"\r\n                onClick={form.restart}\r\n                disabled={submitting}\r\n              >\r\n                Reset\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </span>\r\n          </form>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyForm from './MyForm';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyForm />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}