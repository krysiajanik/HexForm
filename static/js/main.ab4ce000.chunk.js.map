{"version":3,"sources":["MyForm.module.scss","Validate.js","MyForm.js","index.js"],"names":["module","exports","validate","e","errors","name","preparation_time","match","type","no_of_slices","diameter","spiciness_scale","slices_of_bread","minValue","min","value","isNaN","undefined","maxValue","max","composeValidators","validators","reduce","error","validator","Condition","when","is","children","subscription","input","normalizeDuration","onlyNums","replace","slice","MyForm","onSubmit","values","a","console","log","createDishObj","parseInt","parseFloat","newDish","JSON","stringify","postHeaders","Headers","append","method","headers","body","redirect","className","styles","wrapper","handleSubmit","form","submitting","dishForm","fullWidth","required","component","TextField","label","placeholder","parse","select","MenuItem","Select","formControlProps","buttonWrapper","Button","variant","size","onClick","restart","disabled","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,SAAW,yBAAyB,cAAgB,gC,2KC8CvFC,EA/CA,SAACC,GACd,IAAMC,EAAS,GA2Cf,OAzCKD,EAAEE,OACLD,EAAOC,KAAO,aAEXF,EAAEG,mBACLF,EAAOE,iBAAmB,aAI1BH,EAAEG,mBACDH,EAAEG,iBAAiBC,MAAM,uCAE1BH,EAAOE,iBAAmB,2CAGvBH,EAAEK,OACLJ,EAAOI,KAAO,aAED,UAAXL,EAAEK,OACCL,EAAEM,eACLL,EAAOK,aAAe,aAEnBN,EAAEO,WACLN,EAAOM,SAAW,cAGlBP,EAAEO,WAAaP,EAAEO,SAASH,MAAM,wCAClCH,EAAOM,SAAW,sCAGL,SAAXP,EAAEK,OACCL,EAAEQ,kBACLP,EAAOO,gBAAkB,cAId,SAAXR,EAAEK,OACCL,EAAES,kBACLR,EAAOQ,gBAAkB,cAItBR,G,wECrCLS,EAAW,SAACC,GAAD,OAAS,SAACC,GAAD,OACxBC,MAAMD,IAAUA,GAASD,OAAMG,EAA/B,oCAAwEH,KAEpEI,EAAW,SAACC,GAAD,OAAS,SAACJ,GAAD,OACxBC,MAAMD,IAAUA,GAASI,OAAMF,EAA/B,oCAAwEE,KAEpEC,EACJ,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACA,SAACN,GAAD,OACEM,EAAWC,QACT,SAACC,EAAOC,GAAR,OAAsBD,GAASC,EAAUT,UACzCE,KAGAQ,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,SAAb,OAChB,cAAC,IAAD,CAAOvB,KAAMqB,EAAMG,aAAc,CAAEd,OAAO,GAA1C,SACG,qBAAGe,MAASf,QAAyBY,EAAKC,EAAW,SAIpDG,EAAoB,SAAChB,GACzB,IAAKA,EAAO,OAAOA,EACnB,IAAMiB,EAAWjB,EAAMkB,QAAQ,SAAU,IACzC,MAAM,GAAN,OAAUD,EAASE,MAAM,EAAG,GAA5B,YAAkCF,EAASE,MAAM,EAAG,GAApD,YAA0DF,EAASE,MACjE,EACA,KAyJWC,EArJA,WACb,IAAMC,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,sDACfC,QAAQC,IAAIH,GAENI,EAAgB,CACpBpC,KAAMgC,EAAOhC,KACbC,iBAAkB+B,EAAO/B,iBACzBE,KAAM6B,EAAO7B,KACbC,aAAciC,SAASL,EAAO5B,cAC9BC,SAAUiC,WAAWN,EAAO3B,UAC5BC,gBAAiB0B,EAAO1B,gBACxBC,gBAAiB8B,SAASL,EAAOzB,kBAG7BgC,EAAUC,KAAKC,UAAUL,EAAe,EAAG,IAC7CM,EAAc,IAAIC,SACVC,OAAO,eAAgB,oBAEnCV,QAAQC,IAAII,GACO,CACjBM,OAAQ,OACRC,QAASJ,EACTK,KAAMR,EACNS,SAAU,UAtBG,2CAAH,sDA+Bd,OACE,qBAAKC,UAAWC,IAAOC,QAAvB,SACE,cAAC,IAAD,CAAMpB,SAAUA,EAAUlC,SAAUA,EAApC,SACG,gBAAGuD,EAAH,EAAGA,aAAsBC,GAAzB,EAAiBrB,OAAjB,EAAyBqB,MAAMC,EAA/B,EAA+BA,WAA/B,wBACC,uBAAMvB,SAAUqB,EAAcH,UAAWC,IAAOK,SAAhD,UACE,cAAC,IAAD,CACEC,WAAS,EACTC,UAAQ,EACRzD,KAAK,OACL0D,UAAWC,YACXxD,KAAK,OACLyD,MAAM,cAER,cAAC,IAAD,CACEJ,WAAS,EACTC,UAAQ,EACRzD,KAAK,mBACL0D,UAAWC,YACXxD,KAAK,OACLyD,MAAM,mBACNC,YAAY,WACZC,MAAOpC,IAGT,eAAC,IAAD,CACE1B,KAAK,OACL+D,QAAM,EACNH,MAAM,mBACNF,UAAWC,YACXxD,KAAK,OACLqD,WAAS,EACTC,UAAQ,EAPV,UASE,cAACO,EAAA,EAAD,CAAUtD,MAAM,QAAhB,mBACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,OAAhB,kBACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,WAAhB,yBAEF,eAAC,EAAD,CAAWW,KAAK,OAAOC,GAAG,QAA1B,UACE,cAAC,IAAD,CACEtB,KAAK,eACL4D,MAAM,mBACNF,UAAWC,YACXxD,KAAK,SACLN,SAAUkB,EAAkBP,EAAS,IAAMK,EAAS,KACpDiD,MAAO,SAACpD,GAAD,OAAWA,GAAS2B,SAAS3B,IACpC8C,WAAS,EACTC,UAAQ,IAEV,cAAC,IAAD,CACEzD,KAAK,WACL4D,MAAM,WACNF,UAAWC,YACXxD,KAAK,SACLN,SAAUkB,EAAkBP,EAAS,KAAOK,EAAS,KACrDgD,YAAY,OACZL,WAAS,EACTC,UAAQ,OAGZ,cAAC,EAAD,CAAWpC,KAAK,OAAOC,GAAG,OAAOnB,KAAK,SAAtC,SACE,eAAC,IAAD,CACEH,KAAK,kBACL0D,UAAWO,SACXC,iBAAkB,CAAEV,WAAW,GAC/BI,MAAM,kBACNJ,WAAS,EACTC,UAAQ,EANV,UAQE,cAACO,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,IAAhB,eACA,cAACsD,EAAA,EAAD,CAAUtD,MAAM,KAAhB,qBAGJ,cAAC,EAAD,CAAWW,KAAK,OAAOC,GAAG,WAA1B,SACE,cAAC,IAAD,CACEtB,KAAK,kBACL4D,MAAM,4BACNF,UAAWC,YACXxD,KAAK,SACLN,SAAUkB,EAAkBP,EAAS,IAAMK,EAAS,IACpD2C,WAAS,EACTC,UAAQ,MAGZ,uBAAMR,UAAWC,IAAOiB,cAAxB,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACLnE,KAAK,SACLoE,QAASlB,EAAKmB,QACdC,SAAUnB,EALZ,mBASA,cAACc,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACLI,MAAM,UACNvE,KAAK,SAJP,gCCpKdwE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ab4ce000.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MyForm_wrapper__zleSf\",\"dishForm\":\"MyForm_dishForm__hFXqY\",\"buttonWrapper\":\"MyForm_buttonWrapper__1Bt_a\"};","const validate = (e) => {\r\n    const errors = {};\r\n\r\n    if (!e.name) {\r\n      errors.name = \"Required!\";\r\n    }\r\n    if (!e.preparation_time) {\r\n      errors.preparation_time = \"Required!\";\r\n    }\r\n\r\n    if (\r\n      e.preparation_time &&\r\n      !e.preparation_time.match(/[0-0][0-2]:[0-5][0-9]:[0-5][0-9]/g)\r\n    ) {\r\n      errors.preparation_time = \"Incorrect input - max duration 02:59:59\";\r\n    }\r\n\r\n    if (!e.type) {\r\n      errors.type = \"Required!\";\r\n    }\r\n    if (e.type === \"pizza\") {\r\n      if (!e.no_of_slices) {\r\n        errors.no_of_slices = \"Required!\";\r\n      }\r\n      if (!e.diameter) {\r\n        errors.diameter = \"Required!\";\r\n      }\r\n    }\r\n    if (e.diameter && !e.diameter.match(/[0-7][0-9].[0-9]|[0-8][0-0].[0-0]/g)) {\r\n      errors.diameter = \"Please input value in format 00.0!\";\r\n    }\r\n\r\n    if (e.type === \"soup\") {\r\n      if (!e.spiciness_scale) {\r\n        errors.spiciness_scale = \"Required!\";\r\n      }\r\n    }\r\n\r\n    if (e.type === \"soup\") {\r\n      if (!e.slices_of_bread) {\r\n        errors.slices_of_bread = \"Required!\";\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  export default validate;","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { TextField, Select} from \"final-form-material-ui\";\r\nimport { MenuItem, Button } from \"@material-ui/core\";\r\nimport validate from \"./Validate\";\r\nimport styles from \"./MyForm.module.scss\";\r\n\r\nconst minValue = (min) => (value) =>\r\n  isNaN(value) || value >= min ? undefined : `Number can't be less than ${min}`;\r\n\r\nconst maxValue = (max) => (value) =>\r\n  isNaN(value) || value <= max ? undefined : `Number can't be more than ${max}`;\r\n\r\nconst composeValidators =\r\n  (...validators) =>\r\n  (value) =>\r\n    validators.reduce(\r\n      (error, validator) => error || validator(value),\r\n      undefined\r\n    );\r\n\r\nconst Condition = ({ when, is, children }) => (\r\n  <Field name={when} subscription={{ value: true }}>\r\n    {({ input: { value } }) => (value === is ? children : null)}\r\n  </Field>\r\n);\r\n\r\nconst normalizeDuration = (value) => {\r\n  if (!value) return value;\r\n  const onlyNums = value.replace(/[^\\d]/g, \"\");\r\n  return `${onlyNums.slice(0, 2)}:${onlyNums.slice(2, 4)}:${onlyNums.slice(\r\n    4,\r\n    6\r\n  )}`;\r\n};\r\n\r\nconst MyForm = () => {\r\n  const onSubmit = async (values) => {\r\n    console.log(values);\r\n\r\n    const createDishObj = {\r\n      name: values.name,\r\n      preparation_time: values.preparation_time,\r\n      type: values.type,\r\n      no_of_slices: parseInt(values.no_of_slices),\r\n      diameter: parseFloat(values.diameter),\r\n      spiciness_scale: values.spiciness_scale,\r\n      slices_of_bread: parseInt(values.slices_of_bread),\r\n    };\r\n\r\n    const newDish = JSON.stringify(createDishObj, 0, 2);\r\n    var postHeaders = new Headers();\r\n    postHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    console.log(newDish);\r\n    const postDishes = {\r\n      method: \"POST\",\r\n      headers: postHeaders,\r\n      body: newDish,\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    //   fetch(\"https://frosty-wood-6558.getsandbox.com:443/dishes\", postDishes)\r\n    //     .then((response) => response.text())\r\n    //     .then((result) => console.log(result))\r\n    //     .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Form onSubmit={onSubmit} validate={validate}>\r\n        {({ handleSubmit, values, form, submitting, ...props }) => (\r\n          <form onSubmit={handleSubmit} className={styles.dishForm}>\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"name\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"Dish name\"\r\n            />\r\n            <Field\r\n              fullWidth\r\n              required\r\n              name=\"preparation_time\"\r\n              component={TextField}\r\n              type=\"text\"\r\n              label=\"Preparation time\"\r\n              placeholder=\"00:00:00\"\r\n              parse={normalizeDuration}\r\n            />\r\n\r\n            <Field\r\n              name=\"type\"\r\n              select\r\n              label=\"Select dish type\"\r\n              component={TextField}\r\n              type=\"time\"\r\n              fullWidth\r\n              required\r\n            >\r\n              <MenuItem value=\"pizza\">Pizza</MenuItem>\r\n              <MenuItem value=\"soup\">Soup</MenuItem>\r\n              <MenuItem value=\"sandwich\">Sandwich</MenuItem>\r\n            </Field>\r\n            <Condition when=\"type\" is=\"pizza\">\r\n              <Field\r\n                name=\"no_of_slices\"\r\n                label=\"Number of slices\"\r\n                component={TextField}\r\n                type=\"number\"\r\n                validate={composeValidators(minValue(1) && maxValue(12))}\r\n                parse={(value) => value && parseInt(value)}\r\n                fullWidth\r\n                required\r\n              />\r\n              <Field\r\n                name=\"diameter\"\r\n                label=\"Diameter\"\r\n                component={TextField}\r\n                type=\"number\"\r\n                validate={composeValidators(minValue(10) && maxValue(80))}\r\n                placeholder=\"00.0\"\r\n                fullWidth\r\n                required\r\n              />\r\n            </Condition>\r\n            <Condition when=\"type\" is=\"soup\" type=\"number\">\r\n              <Field\r\n                name=\"spiciness_scale\"\r\n                component={Select}\r\n                formControlProps={{ fullWidth: true }}\r\n                label=\"Spiciness scale\"\r\n                fullWidth\r\n                required\r\n              >\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n                <MenuItem value=\"8\">8</MenuItem>\r\n                <MenuItem value=\"9\">9</MenuItem>\r\n                <MenuItem value=\"10\">10</MenuItem>\r\n              </Field>\r\n            </Condition>\r\n            <Condition when=\"type\" is=\"sandwich\">\r\n              <Field\r\n                name=\"slices_of_bread\"\r\n                label=\"Number of slices of bread\"\r\n                component={TextField}\r\n                type=\"number\"\r\n                validate={composeValidators(minValue(0) && maxValue(8))}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Condition>\r\n            <span className={styles.buttonWrapper}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                type=\"button\"\r\n                onClick={form.restart}\r\n                disabled={submitting}\r\n              >\r\n                Reset\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </span>\r\n          </form>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyForm from './MyForm';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyForm />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}